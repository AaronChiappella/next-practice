generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                         Int       @id @default(autoincrement())
  email                      String    @unique
  name                       String
  address                    String?
  createdAt                  DateTime  @default(now())
  deletedAt                  DateTime?
  hashedPassword             String
  phoneNumber                String?
  profilePictureThumbnailUrl String?
  profilePictureUrl          String?
  role                       Role      @default(USER)
  softDelete                 Boolean   @default(false)
  surname                    String
  updatedAt                  DateTime  @updatedAt
  managedSector              Sector?   @relation("ManagerSector", fields: [managedSectorId], references: [id])
  managedSectorId            Int?      @unique
  worksIn                    Sector[]  @relation("UserWorksIn")

  @@index([email])
  @@index([role])
}

model Sector {
  id           Int      @id @default(autoincrement())
  name         String
  manager      User?     @relation("ManagerSector")
  users        User[]    @relation("UserWorksIn")
}

model FloorType {
  id   Int    @id @default(autoincrement())
  name String
  orders Order[]
}

model Order {
  orderNumber         Int        @id @default(autoincrement())
  createdDate         DateTime   @default(now())
  deliveryDate        DateTime   @default(now())
  realDeliveryDate    DateTime?
  client              Client     @relation(fields: [clientId], references: [id])
  clientId            Int
  truck               Truck      @relation(fields: [truckId], references: [id])
  truckId             Int
  totalLength         Float    @default(0.0)
  utilLength          Float    @default(0.0)
  totalHeight         Float    @default(0.0)
  utilHeight          Float    @default(0.0)
  totalWidth          Float    @default(0.0)
  utilWidth           Float    @default(0.0)
  floorThickness      Float    @default(0.0)
  floorType           FloorType  @relation(fields: [floorTypeId], references: [id])
  floorTypeId         Int
  sideDoor            String?
  backDoor            String?
  stairs              String?
  stakeHolders        Float    @default(0.0)
  nozzles             Float    @default(0.0)
  malacates           Float    @default(0.0)
  arches              Float    @default(0.0)
  color               String     @default("BLANCO")
  colorSocket         String     @default("BLANCO")
  colorBottom         String     @default("BLANCO")
  voltage             Voltage    @default(V24)
  observations        Observation[]
  state               OrderState @default(CREADO)

  @@index([clientId])
}

enum Role {
  USER
  ADMIN
  MANAGER
  WORKER
}

enum OrderState {
  CREADO
  PREPARANDO
  PRODUCIENDO
  RETIRAR
  FINALIZADA
}

model Observation {
  id          Int    @id @default(autoincrement())
  order       Order  @relation(fields: [orderId], references: [orderNumber])
  orderId     Int
  description String
}

enum Voltage {
  V12
  V24
}


model Truck {
  id             Int        @id @default(autoincrement())
  name           String
  domain         String
  color          String
  description    String
  year           Int
  gearbox        Int
  chassisLength  Float    @default(0.0)
  chassisWidth   Float    @default(0.0)
  wheelCenter    Float    @default(0.0)
  room           Boolean    @default(false)
  orders         Order[]
}

model Client {
  id          Int      @id @default(autoincrement())
  name        String
  cuit        String
  direccion   String
  phoneNumber String?
  mail        String?
  orders      Order[]
}
